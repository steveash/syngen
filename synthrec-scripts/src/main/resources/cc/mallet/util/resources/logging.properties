#
# Copyright (c) 2017, Steve Ash
#
# This file is part of Syngen.
# Syngen is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Syngen is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Syngen.  If not, see <http://www.gnu.org/licenses/>.
#

# This file exists only to keep MALLET from sending a message to stderr complaining that it doesn't exist.
# The fact that this empty file also turns off MALLET's very verbose debugging is just a nice bonus.

############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = cc.mallet.util.PlainLogFormatter

#cc.mallet.optimize.BackTrackLineSearch.level = FINEST
#edu.umass.cs.mallet.base.ml.maximize.LimitedMemoryBFGS.level = FINEST
#cc.mallet.classify.RankMaxEntTrainer.level = FINEST
