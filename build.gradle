buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
        springVersion = '4.3.7.RELEASE'
    }
    repositories {
        mavenCentral()
//        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.8'
    }
}

plugins {
//    id 'org.springframework.boot' version "1.4.3.RELEASE"
//    id "com.dorongold.task-tree" version "1.2.1"
    id "io.spring.dependency-management" version "0.5.6.RELEASE"
    id "net.ltgt.apt" version "0.9"
}

ext {
    javaprojects = subprojects.findAll {
        it.name in [
                'synthrec-data',
                'synthrec-core',
                'synthrec-generator',
                'synthrec-sample-deps',
                'synthrec-oss-deps',
				'synthrec-scripts'
        ]
    }
    // the public repo only has public projects
    publicjava = javaprojects

    groovyVersion = "2.4.6"
}
description = "Syngen is a person record profiling and generation framework"

configure(allprojects) {
    group = "com.github.steveash.synthrec"
    version = currentVersion

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

configure(javaprojects) {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'groovy'
    apply plugin: 'spring-boot'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: "net.ltgt.apt"
    findMainClass.enabled = false
    bootRepackage.enabled = false

    //jar {
    //	baseName = 'synthrec'
    //	version = currentVersion
    //}

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework:spring-framework-bom:${springVersion}"
        }
        dependencies {
            dependency "org.codehaus.groovy:groovy-all:${groovyVersion}"
            dependency "org.codehaus.groovy:groovy:${groovyVersion}"
            dependency "org.codehaus.groovy:groovy-test:${groovyVersion}"
            dependency 'org.apache.commons:commons-lang3:3.5'
            dependency 'commons-codec:commons-codec:1.10'
            dependency 'com.google.guava:guava:21.0'
            dependency 'org.apache.commons:commons-math3:3.6.1'
            dependency 'org.slf4j:slf4j-api:1.7.25'
            dependency "org.springframework.boot:spring-boot-starter:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}"
            dependency 'junit:junit:4.12'
            dependency 'com.google.code.findbugs:jsr305:3.0.1'
            dependency 'org.mapdb:mapdb:1.0.9'
            dependency 'com.esotericsoftware:kryo-shaded:3.0.3'
            dependency 'com.github.steveash.jg2p:jg2p-pipe-cmu:1.1.2'
            dependency 'com.github.steveash.jg2p:jg2p-syllg-cmu:1.1.2'
            dependency 'com.github.steveash.mallet:mallet:2.0.12'
            dependency 'it.unimi.dsi:fastutil:7.0.13'
            dependency 'com.github.steveash.commons:commons-convert:0.90.0'
            dependency 'com.github.steveash.guavate:guavate:1.0.0'
            dependency 'org.apache.commons:commons-compress:1.12'
            dependency 'commons-io:commons-io:2.5'
            dependency 'org.jamel.dbf:dbf-reader:0.1.0'
            dependency 'com.github.tony19:named-regexp:0.1.8'
            dependency 'org.jfree:jfreechart:1.0.19'
            dependency 'args4j:args4j:2.33'
            dependency 'org.mockito:mockito-core:1.10.19'
            dependency 'org.codehaus.gpars:gpars:1.2.1'
            dependency 'io.dropwizard.metrics:metrics-core:3.1.2'
            dependency "com.google.code.gson:gson:2.3.1"
            dependency "com.google.truth:truth:0.31"
            dependency 'com.github.universal-automata:liblevenshtein:3.0.0'
            dependency 'com.github.steveash.itxttbl:inamik-text-tables:0.1'
        }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api'
        compile 'com.google.guava:guava'
        compile 'com.google.code.findbugs:jsr305'
        compile 'org.apache.commons:commons-lang3'
        compile 'org.apache.commons:commons-math3'
        compile 'com.github.steveash.guavate:guavate'
        testCompile 'junit:junit'
        testCompile 'com.google.truth:truth'
        testCompile 'org.springframework.boot:spring-boot-starter-log4j2'
        testCompile "org.codehaus.groovy:groovy:${groovyVersion}"
        testCompile "org.codehaus.groovy:groovy-test:${groovyVersion}"

        apt "org.immutables:value:2.4.0"
        provided "org.immutables:value:2.4.0"
    }

    configurations {
        published
        thirdparty
        tests

        // global exclusions; we never want slf4j's olf log4j implementation
        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
        all*.exclude group: "log4j", module: "log4j"
        all*.exclude group: "ch.qos.logback", module: "logback-classic"
        all*.exclude group: "ch.qos.logback", module: "logback-core"
    }

    task(checkJavaVersion).doLast {
        def current = JavaVersion.current()
        if (!current.isJava8Compatible()) {
            throw new IllegalStateException("Build requires java 8+ but you're java home points to $current")
        }
    }

    compileJava.dependsOn checkJavaVersion

    eclipse {
        classpath {
            containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
            containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
        }
    }

    tasks.withType(JavaCompile) {
//        options.warnings = false
        options.compilerArgs += '-Xlint:-unchecked'
    }

    task testJar(type: Jar) {
        classifier 'test'
        from sourceSets.test.output
    }

    artifacts {
        tests testJar
    }
}

configure(publicjava) {

    test {
        include '**/*Test.*'
        include '**/Test**.*'

        systemProperty 'synth.data', new File(rootProject.projectDir, 'synthrec-data/src/main/resources').canonicalPath
    }
}

/*
 * Copyright (c) 2017, Steve Ash
 *
 * This file is part of Syngen.
 * Syngen is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Syngen is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Syngen.  If not, see <http://www.gnu.org/licenses/>.
 */

// control the distribution package which creates a zip with all dependencies (no java) and
// data in the data folder
apply plugin: 'distribution'
distTar.enabled = false
distributions {
    main {
//        baseName = 'someName'
        contents {
            into('data') {
                from { 'synthrec-data/src/main/resources' }
            }
            into('etc') {
                from { 'synthrec-generator/src/main/resources' }
                include "*.yml"
                exclude "log4j2.xml"
            }
            into('etc') {
                from { 'synthrec-scripts/src/main/resources' }
                include 'log4j2.xml'
            }
            into('lib') {
                from project('synthrec-scripts').configurations.runtime
                exclude 'synthrec-data*.jar'
            }
            into('bin/scripts') {
                from { 'synthrec-scripts/src/main/groovy' }
            }
        }
    }
}


